	jmp skipf0x556bde242940
pow:
	pop cx
	pop [bx+0]
	pop [bx+1]
	push cx
	push [bx+1]
	push 0.000000
	je relt0x556bde241f80
	push 0
	jmp rels0x556bde241f80
relt0x556bde241f80:
	push 1
rels0x556bde241f80:
	push 0
	jne if_t0x556bde241ec0:
	jmp if_e0x556bde241ec0
if_t0x556bde241ec0:
	push 1.000000
	pop ax
	ret
if_e0x556bde241ec0:
	push [bx+0]
	pop [bx+2]
while0x556bde242280:
	push [bx+1]
	push 2.000000
	jal relt0x556bde242740
	push 0
	jmp rels0x556bde242740
relt0x556bde242740:
	push 1
rels0x556bde242740:
	push 0
	jne wskip0x556bde242280
	jmp wend0x556bde242280
wskip0x556bde242280:
	push [bx+0]
	push [bx+2]
	mul
	pop [bx+0]
	push [bx+1]
	push 1.000000
	sub
	pop [bx+1]
	jmp while0x556bde242280
wend0x556bde242280:
	push [bx+0]
	pop ax
	ret
skipf0x556bde242940:
	push 20.000000
	pop [bx+400]
	push 20.000000
	pop [bx+401]
	push 8.000000
	pop [bx+402]
	push 1.000000
	pop [bx+403]
	push 0.000000
	pop [bx+404]
while0x556bde242e80:
	push [bx+403]
	push 20.000000
	jb relt0x556bde244200
	push 0
	jmp rels0x556bde244200
relt0x556bde244200:
	push 1
rels0x556bde244200:
	push 0
	jne wskip0x556bde242e80
	jmp wend0x556bde242e80
wskip0x556bde242e80:
	push 0.000000
	pop [bx+404]
while0x556bde243000:
	push [bx+404]
	push 20.000000
	jb relt0x556bde243e00
	push 0
	jmp rels0x556bde243e00
relt0x556bde243e00:
	push 1
rels0x556bde243e00:
	push 0
	jne wskip0x556bde243000
	jmp wend0x556bde243000
wskip0x556bde243000:
	push 2.000000
	push [bx+404]
	push 10.000000
	sub
	push bx
	push 6
	add
	pop bx
	call pow
	push bx
	push 6
	sub
	pop bx
	push ax
	push 2.000000
	push [bx+403]
	push 10.000000
	sub
	push bx
	push 6
	add
	pop bx
	call pow
	push bx
	push 6
	sub
	pop bx
	push ax
	add
	push 2.000000
	push [bx+402]
	push bx
	push 6
	add
	pop bx
	call pow
	push bx
	push 6
	sub
	pop bx
	push ax
	jb relt0x556bde2434c0
	push 0
	jmp rels0x556bde2434c0
relt0x556bde2434c0:
	push 1
rels0x556bde2434c0:
	push 0
	jne if_t0x556bde243080:
	jmp if_e0x556bde243080
if_t0x556bde243080:
	push [bx+404]
	push [bx+403]
	push [bx+401]
	mul
	add
	pop [bx+405]
	push 1.000000
	push [bx+405]
	pop dx
	push bx
	push dx
	add
	pop bx
	pop [bx+0]
	push bx
	push dx
	sub
	pop bx
if_e0x556bde243080:
	push [bx+404]
	push 1.000000
	add
	pop [bx+404]
	jmp while0x556bde243000
wend0x556bde243000:
	push [bx+403]
	push 1.000000
	add
	pop [bx+403]
	jmp while0x556bde242e80
wend0x556bde242e80:
	push 20.000000
	push 20.000000
	push 0.000000
	display
hlt
